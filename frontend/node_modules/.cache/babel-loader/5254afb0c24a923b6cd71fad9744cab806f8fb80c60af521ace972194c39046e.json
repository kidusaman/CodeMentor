{"ast":null,"code":"var _jsxFileName = \"/Users/kidusamanuel/Desktop/codeDebugger/frontend/src/components/CodeConverter.js\",\n  _s = $RefreshSig$();\n// src/components/CodeConverter.js\nimport React, { useState } from 'react';\nimport { Button, Box, TextField, Typography, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { convertCode } from '../services/api';\nimport CodeDisplay from './CodeDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeConverter() {\n  _s();\n  const [code, setCode] = useState('');\n  const [sourceLang, setSourceLang] = useState('Python');\n  const [targetLang, setTargetLang] = useState('JavaScript');\n  const [result, setResult] = useState('');\n  const handleConvert = async () => {\n    try {\n      const response = await convertCode(code, sourceLang, targetLang);\n      setResult(response.result);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(error);\n      setResult(`Error: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: 2,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Code Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      gap: 2,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Source Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: sourceLang,\n          label: \"Source Language\",\n          onChange: e => setSourceLang(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Python\",\n            children: \"Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"JavaScript\",\n            children: \"JavaScript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Java\",\n            children: \"Java\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"C++\",\n            children: \"C++\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Target Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: targetLang,\n          label: \"Target Language\",\n          onChange: e => setTargetLang(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"JavaScript\",\n            children: \"JavaScript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Python\",\n            children: \"Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Java\",\n            children: \"Java\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"C++\",\n            children: \"C++\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Your Code\",\n      multiline: true,\n      rows: 6,\n      value: code,\n      onChange: e => setCode(e.target.value),\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleConvert,\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      marginTop: 2,\n      children: \"Converted Code:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(CodeDisplay, {\n      code: result,\n      language: targetLang.toLowerCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeConverter, \"kBAbhJoIO4qhHF4ZqUd2PgX9iLQ=\");\n_c = CodeConverter;\nexport default CodeConverter;\nvar _c;\n$RefreshReg$(_c, \"CodeConverter\");","map":{"version":3,"names":["React","useState","Button","Box","TextField","Typography","FormControl","InputLabel","Select","MenuItem","convertCode","CodeDisplay","jsxDEV","_jsxDEV","CodeConverter","_s","code","setCode","sourceLang","setSourceLang","targetLang","setTargetLang","result","setResult","handleConvert","response","error","_error$response","_error$response$data","console","data","detail","message","display","flexDirection","gap","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","value","label","onChange","e","target","multiline","rows","onClick","marginTop","language","toLowerCase","_c","$RefreshReg$"],"sources":["/Users/kidusamanuel/Desktop/codeDebugger/frontend/src/components/CodeConverter.js"],"sourcesContent":["// src/components/CodeConverter.js\nimport React, { useState } from 'react';\nimport { Button, Box, TextField, Typography, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { convertCode } from '../services/api';\nimport CodeDisplay from './CodeDisplay';\n\nfunction CodeConverter() {\n  const [code, setCode] = useState('');\n  const [sourceLang, setSourceLang] = useState('Python');\n  const [targetLang, setTargetLang] = useState('JavaScript');\n  const [result, setResult] = useState('');\n\n  const handleConvert = async () => {\n    try {\n      const response = await convertCode(code, sourceLang, targetLang);\n      setResult(response.result);\n    } catch (error) {\n      console.error(error);\n      setResult(`Error: ${error.response?.data?.detail || error.message}`);\n    }\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n      <Typography variant=\"h5\">Code Converter</Typography>\n\n      <Box display=\"flex\" gap={2}>\n        <FormControl fullWidth>\n          <InputLabel>Source Language</InputLabel>\n          <Select\n            value={sourceLang}\n            label=\"Source Language\"\n            onChange={(e) => setSourceLang(e.target.value)}\n          >\n            <MenuItem value=\"Python\">Python</MenuItem>\n            <MenuItem value=\"JavaScript\">JavaScript</MenuItem>\n            <MenuItem value=\"Java\">Java</MenuItem>\n            <MenuItem value=\"C++\">C++</MenuItem>\n            {/* Add more languages as needed */}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth>\n          <InputLabel>Target Language</InputLabel>\n          <Select\n            value={targetLang}\n            label=\"Target Language\"\n            onChange={(e) => setTargetLang(e.target.value)}\n          >\n            <MenuItem value=\"JavaScript\">JavaScript</MenuItem>\n            <MenuItem value=\"Python\">Python</MenuItem>\n            <MenuItem value=\"Java\">Java</MenuItem>\n            <MenuItem value=\"C++\">C++</MenuItem>\n            {/* Add more languages as needed */}\n          </Select>\n        </FormControl>\n      </Box>\n\n      <TextField\n        label=\"Your Code\"\n        multiline\n        rows={6}\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        variant=\"outlined\"\n      />\n\n      <Button variant=\"contained\" onClick={handleConvert}>\n        Convert\n      </Button>\n\n      <Typography variant=\"h6\" marginTop={2}>\n        Converted Code:\n      </Typography>\n      {result && <CodeDisplay code={result} language={targetLang.toLowerCase()} />}\n    </Box>\n  );\n}\n\nexport default CodeConverter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}