{"ast":null,"code":"var _jsxFileName = \"/Users/kidusamanuel/Desktop/codeDebugger/frontend/src/components/CodeConverter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { convertCode } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeConverter() {\n  _s();\n  const [code, setCode] = useState('');\n  const [sourceLang, setSourceLang] = useState('Python');\n  const [targetLang, setTargetLang] = useState('JavaScript');\n  const [result, setResult] = useState('');\n  const handleConvert = async () => {\n    try {\n      const response = await convertCode(code, sourceLang, targetLang);\n      setResult(response.result);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(error);\n      setResult(`Error: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Code Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Source Language:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sourceLang,\n          onChange: e => setSourceLang(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"JavaScript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Java\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"C++\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Target Language:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: targetLang,\n          onChange: e => setTargetLang(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"JavaScript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Java\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"C++\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 6,\n      cols: 60,\n      placeholder: \"Enter your code here...\",\n      value: code,\n      onChange: e => setCode(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConvert,\n      style: {\n        marginTop: '10px'\n      },\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Converted Code:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeConverter, \"kBAbhJoIO4qhHF4ZqUd2PgX9iLQ=\");\n_c = CodeConverter;\nexport default CodeConverter;\nvar _c;\n$RefreshReg$(_c, \"CodeConverter\");","map":{"version":3,"names":["React","useState","convertCode","jsxDEV","_jsxDEV","CodeConverter","_s","code","setCode","sourceLang","setSourceLang","targetLang","setTargetLang","result","setResult","handleConvert","response","error","_error$response","_error$response$data","console","data","detail","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","value","onChange","e","target","rows","cols","placeholder","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Users/kidusamanuel/Desktop/codeDebugger/frontend/src/components/CodeConverter.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { convertCode } from '../services/api';\n\nfunction CodeConverter() {\n  const [code, setCode] = useState('');\n  const [sourceLang, setSourceLang] = useState('Python');\n  const [targetLang, setTargetLang] = useState('JavaScript');\n  const [result, setResult] = useState('');\n\n  const handleConvert = async () => {\n    try {\n      const response = await convertCode(code, sourceLang, targetLang);\n      setResult(response.result);\n    } catch (error) {\n      console.error(error);\n      setResult(`Error: ${error.response?.data?.detail || error.message}`);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Code Converter</h2>\n      <div style={{ marginBottom: '10px' }}>\n        <label>\n          Source Language:\n          <select value={sourceLang} onChange={(e) => setSourceLang(e.target.value)}>\n            <option>Python</option>\n            <option>JavaScript</option>\n            <option>Java</option>\n            <option>C++</option>\n            {/* Add more languages as needed */}\n          </select>\n        </label>\n      </div>\n      <div style={{ marginBottom: '10px' }}>\n        <label>\n          Target Language:\n          <select value={targetLang} onChange={(e) => setTargetLang(e.target.value)}>\n            <option>JavaScript</option>\n            <option>Python</option>\n            <option>Java</option>\n            <option>C++</option>\n            {/* Add more languages as needed */}\n          </select>\n        </label>\n      </div>\n      <textarea\n        rows={6}\n        cols={60}\n        placeholder=\"Enter your code here...\"\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n      />\n      <br />\n      <button onClick={handleConvert} style={{ marginTop: '10px' }}>Convert</button>\n      <h3>Converted Code:</h3>\n      <pre>{result}</pre>\n    </div>\n  );\n}\n\nexport default CodeConverter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}